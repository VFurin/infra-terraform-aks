name: Terraform-AKS-Deployment

on:
  pull_request:
    types: [opened]
  push:
    branches: [ "main" ]

env:
  working-directory: infra_terraform
  working-directory-k8s: k8s_manifests
  ARM_CLIENT_ID: ${{secrets.TF_CLIENT_ID}}
  ARM_CLIENT_SECRET: ${{secrets.TF_ARM_CLIENT_SECRET}}
  ARM_SUBSCRIPTION_ID: ${{secrets.TF_SUBSCRIPTION_ID}}
  ARM_TENANT_ID: ${{secrets.TF_TENANT_ID}}
  RESOURCE_GROUP: "tech-challenge-rg"
  CLUSTER_NAME: "tech-challenge-aks-cluster"

permissions:
  pull-requests: write
  
jobs:          
  terraform:
    runs-on: ubuntu-latest
   
    steps:
    - name: Checkout
      uses: actions/checkout@v2

    - name: Set up Terraform
      uses: hashicorp/setup-terraform@v1
      with:
        terraform_wrapper: false

    - name: Terraform fmt
      id: fmt
      run: terraform fmt -check
      working-directory: ${{env.working-directory}}
    
    - name: Terraform Init
      id: init
      run: terraform init
      working-directory: ${{env.working-directory}}

    - name: Terraform Validate
      id: validate
      run: terraform validate
      working-directory: ${{env.working-directory}}

    - name: Terraform Plan
      id: plan
      if: github.event_name == 'pull_request'
      run: terraform plan -no-color -input=false
      continue-on-error: true
      working-directory: ${{env.working-directory}}
    
    - name: Terraform Apply
      id: apply
      if: github.ref == 'refs/heads/main' && github.event_name == 'push'
      run: terraform apply -auto-approve -input=false
      working-directory: ${{env.working-directory}}

  terraform-output:
    needs: terraform
    runs-on: ubuntu-latest

    steps:
    - name: Checkout
      uses: actions/checkout@v2

    - name: Set up Terraform
      uses: hashicorp/setup-terraform@v1

    - name: Terraform Output
      id: output
      run: | 
       terraform output kube_config > kubeconfig
       mkdir -p $HOME/.kube
       mv kubeconfig $HOME/.kube/config
          
  deploy_manifests:
    needs: terraform-output
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2
    
    - name: Az CLI login
      uses: azure/login@v1
      with:
        client-id: ${{ secrets.AZURE_CLIENT_ID }}
        tenant-id: ${{ secrets.AZURE_TENANT_ID }}
        subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

    - name: Azure CLI script
      uses: azure/CLI@v1
      with:
        azcliversion: latest
        inlineScript: |
          az account show
          az group list
    
    - name: Configure kubectl
      run: |
        az aks get-credentials --resource-group ${{env.RESOURCE_GROUP}} --name ${{env.CLUSTER_NAME}}
      env:
        kubeconfig: ${{env.HOME}}/.kube/config

    - name: Deploy Kubernetes Manifests
      run: |
        kubectl apply -f ${{env.working-directory-k8s}}